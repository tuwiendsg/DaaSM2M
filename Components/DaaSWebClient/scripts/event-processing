### BEGIN INIT INFO
# Provides:          event-processing
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daas daemon
# Description:       To start-stop event-processing
### END INIT INFO

RUN_MODE="daemons"
JAVA=$(which java)
NAME=daas-pid
DAEMONDIR=./
DAEMON=DaaS-1.0.jar
PIDDIR=/tmp/
PIDFILE=$PIDDIR/daas-pid.pid
MELA_HTTP_PORT=8080
LOG_DIR=/tmp/daas
#Active profiles, can be can be CASSANDRA, MOM, or both, or SLEEPY
PROFILES=SLEEPY

LoadBalancerIP=
HAPROXY_REGISTER_COMMAND="curl -X PUT http://$LoadBalancerIP:5001/service"
HAPROXY_DEREGISTER_COMMAND="curl -X DELETE http://$LoadBalancerIP:5001/service"

IP=`ifconfig eth0 | grep -o 'inet addr:[0-9.]*' | grep -o [0-9.]*`

test -x $JAVA -a -f $DAEMONDIR/$DAEMON || echo "test -x $JAVA -a -f $DAEMONDIR/$DAEMON failed"
test -x $JAVA -a -f $DAEMONDIR/$DAEMON || exit 0

. /lib/lsb/init-functions

case "$1" in
        start)
                log_daemon_msg "Starting daas daemon"
                log_progress_msg "mela"
                # Make sure we have our PIDDIR, even if it's on a tmpfs
                # install -o root -g root -m 755 -d $PIDDIR
        if ! start-stop-daemon --start --chdir $DAEMONDIR --quiet --pidfile $PIDFILE --make-pidfile --background --exec $JAVA -- -Xmx128m -DLOG_DIR=$LOG_DIR -jar $DAEMON -httpPort $MELA_HTTP_PORT -Dspring.profiles.active=$PROFILES  -Djava.security.egd=file:/dev/./urandom; then
                    log_end_msg 1
                    exit 1
                fi
                #make sure DaaS starts before adding it in HAProxy by waiting until someone responds to the curl
                curl -X GET http://localhost:8080/DaaS/ 2>/dev/null >>   /tmp/daas_status           
                while [ $? -ne 0 ]
                   do
                     curl -X GET http://localhost:8080/DaaS/ 2>/dev/null >> /tmp/daas_status
                     sleep 1    
                   done                  
                   
                
                log_daemon_msg "Register in HAPROXY"
                eval "$HAPROXY_REGISTER_COMMAND/$IP/$MELA_HTTP_PORT"
                log_end_msg 0
                ;;
        stop)
                log_daemon_msg "Stopping daas daemon"
                log_progress_msg "mela"
                #first remove from haproxy, then close service
                eval "$HAPROXY_DEREGISTER_COMMAND/$IP/$MELA_HTTP_PORT"
                start-stop-daemon --stop --quiet --pidfile $PIDFILE
                # Wait a little and remove stale PID file
                sleep 1
                if [ -f $PIDFILE ] && ! ps h `cat $PIDFILE` > /dev/null
                then
                        PID_PORT=`echo $PIDFILE | rev | cut -d/ -f1 | rev`
                       
                        # Stale PID file (daas was succesfully stopped),
                        # remove it
                        rm -f $PIDFILE
                fi
                ;;
        restart)
                $0 stop
                sleep 1
                $0 start
                ;;
        status)
                pidofproc -p $PIDFILE $JAVA >/dev/null
                status=$?
                if [ $status -eq 0 ]; then
                        log_success_msg "daas is running"
                else
                        log_failure_msg "daas is not running"
                fi
                exit $status
                ;;
        *)
                echo "Usage: $0 {start|stop|restart|status}"
                exit 1
                ;;
esac

exit 0


